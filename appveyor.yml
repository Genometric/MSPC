version: '4.0.{build}'
image: 'Visual Studio 2019'
init:
    -
        cmd: 'git config --global core.autocrlf true'
install:
    - 'nuget restore'
    - 'dotnet restore'
    - 'choco install codecov'
before_build:
    - 'nuget restore'
    - {ps: "$env:PATH = 'C:\\Users\\appveyor\\.nuget\\packages\\microsoft.codecoverage\\16.4.0\\build\\netstandard1.0\\CodeCoverage\\;' + $env:PATH"}
build:
    verbosity: minimal
clone_depth: 1
test_script:
    -
        cmd: 'dotnet restore Core.Tests\Core.Tests.csproj --verbosity m'
    -
        cmd: 'dotnet test Core.Tests\Core.Tests.csproj --collect "Code coverage" --results-directory:.'
    - {ps: "$coverage_file = dir -path . -filter *.coverage -recurse | %{$_.FullName -replace \"\\\\\", \"/\"}"}
    - {ps: "codecoverage.exe analyze /output:coverage.xml $coverage_file"}
    
# on_finish: any clean up code here
deploy: off
for:
    -
        branches:
            only: [master]
        configuration: Release
        build_script:
            - 'MSBuild.exe /t:Rebuild'
        after_test:
            - {ps: "$env:PATH = 'C:\\msys64\\usr\\bin;' + $env:PATH\ncodecov.exe -f coverage.xml\n"}
        artifacts:
            - {path: 'Core/bin/Release/Genometric.MSPC.Core*.nupkg', name: MSPC}
        deploy:
            provider: NuGet
            api_key: {secure: R9BDT6tjyjrRf/SNqhrjz3Bju8vUGEZ05qG6UAIF7Zmam2Wk8wjZgDMVyzRvY8Ae}
            skip_symbols: false
    -
        branches:
            only: ['/dev*/']
        configuration: Debug
        after_test:
            - {ps: "codecov.exe -f coverage.xml"}
