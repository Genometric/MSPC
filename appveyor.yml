version: '4.0.{build}'
image: 'Visual Studio 2019'
init:
    -
        cmd: 'git config --global core.autocrlf true'
install:
    - 'nuget restore'
    - 'dotnet restore'
    - 'choco install codecov'
before_build:
    - 'nuget restore'
    - 'choco install codecov'
build:
    verbosity: minimal
clone_depth: 1
test_script:
    -
        cmd: 'dotnet restore Core.Tests\Core.Tests.csproj --verbosity m'
    -
        cmd: 'dotnet test Core.Tests\Core.Tests.csproj --collect "Code coverage" --results-directory:.'
    -
        cmd: 'cd Core.Tests'
# on_finish: any clean up code here
deploy: off
for:
    -
        branches:
            only: [master]
        configuration: Release
        build_script:
            - 'MSBuild.exe /t:Rebuild'
        after_test:
            - {ps: "$coverage_file = dir -path . -filter *.coverage -recurse | %{$_.FullName}"}
            - {ps: "$env:PATH = 'C:\\msys64\\usr\\bin;' + $env:PATH\nInvoke-WebRequest -Uri 'https://codecov.io/bash' -OutFile codecov.sh\n.\\codecov.sh -f \"$coverage_file\"\n"}
            - {ps: 'cd ..'}
        artifacts:
            - {path: 'Core/bin/Release/Genometric.MSPC.Core*.nupkg', name: MSPC}
        deploy:
            provider: NuGet
            api_key: {secure: R9BDT6tjyjrRf/SNqhrjz3Bju8vUGEZ05qG6UAIF7Zmam2Wk8wjZgDMVyzRvY8Ae}
            skip_symbols: false
    -
        branches:
            only: ['/dev*/']
        configuration: Debug
        after_test:
            - {ps: "$coverage_file = dir -path . -filter *.coverage -recurse | %{$_.FullName}"}
            - {ps: "$env:PATH = 'C:\\msys64\\usr\\bin;' + $env:PATH\nInvoke-WebRequest -Uri 'https://codecov.io/bash' -OutFile codecov.sh\n.\\codecov.sh -f \"$coverage_file\"\n"}
