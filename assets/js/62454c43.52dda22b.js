"use strict";(self.webpackChunkmspc=self.webpackChunkmspc||[]).push([[130],{5680:(e,n,t)=>{t.d(n,{xA:()=>u,yg:()=>g});var a=t(6540);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),p=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=p(e.components);return a.createElement(s.Provider,{value:n},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=p(t),m=r,g=d["".concat(s,".").concat(m)]||d[m]||c[m]||i;return t?a.createElement(g,o(o({ref:n},u),{},{components:t})):a.createElement(g,o({ref:n},u))}));function g(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,o=new Array(i);o[0]=m;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[d]="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=t[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},9365:(e,n,t)=>{t.d(n,{A:()=>o});var a=t(6540),r=t(53);const i={tabItem:"tabItem_Ymn6"};function o(e){let{children:n,hidden:t,className:o}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.A)(i.tabItem,o),hidden:t},n)}},1470:(e,n,t)=>{t.d(n,{A:()=>k});var a=t(8168),r=t(6540),i=t(53),o=t(3104),l=t(2681),s=t(7485),p=t(1682),u=t(9466);function d(e){return function(e){return r.Children.map(e,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))}(e).map((e=>{let{props:{value:n,label:t,attributes:a,default:r}}=e;return{value:n,label:t,attributes:a,default:r}}))}function c(e){const{values:n,children:t}=e;return(0,r.useMemo)((()=>{const e=n??d(t);return function(e){const n=(0,p.X)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function m(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function g(e){let{queryString:n=!1,groupId:t}=e;const a=(0,l.W6)(),i=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,s.aZ)(i),(0,r.useCallback)((e=>{if(!i)return;const n=new URLSearchParams(a.location.search);n.set(i,e),a.replace({...a.location,search:n.toString()})}),[i,a])]}function h(e){const{defaultValue:n,queryString:t=!1,groupId:a}=e,i=c(e),[o,l]=(0,r.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!m({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const a=t.find((e=>e.default))??t[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:i}))),[s,p]=g({queryString:t,groupId:a}),[d,h]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[a,i]=(0,u.Dv)(t);return[a,(0,r.useCallback)((e=>{t&&i.set(e)}),[t,i])]}({groupId:a}),f=(()=>{const e=s??d;return m({value:e,tabValues:i})?e:null})();(0,r.useLayoutEffect)((()=>{f&&l(f)}),[f]);return{selectedValue:o,selectValue:(0,r.useCallback)((e=>{if(!m({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);l(e),p(e),h(e)}),[p,h,i]),tabValues:i}}var f=t(2303);const y={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function b(e){let{className:n,block:t,selectedValue:l,selectValue:s,tabValues:p}=e;const u=[],{blockElementScrollPositionUntilNextRender:d}=(0,o.a_)(),c=e=>{const n=e.currentTarget,t=u.indexOf(n),a=p[t].value;a!==l&&(d(n),s(a))},m=e=>{var n;let t=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const n=u.indexOf(e.currentTarget)+1;t=u[n]??u[0];break}case"ArrowLeft":{const n=u.indexOf(e.currentTarget)-1;t=u[n]??u[u.length-1];break}}null==(n=t)||n.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":t},n)},p.map((e=>{let{value:n,label:t,attributes:o}=e;return r.createElement("li",(0,a.A)({role:"tab",tabIndex:l===n?0:-1,"aria-selected":l===n,key:n,ref:e=>u.push(e),onKeyDown:m,onClick:c},o,{className:(0,i.A)("tabs__item",y.tabItem,null==o?void 0:o.className,{"tabs__item--active":l===n})}),t??n)})))}function N(e){let{lazy:n,children:t,selectedValue:a}=e;if(t=Array.isArray(t)?t:[t],n){const e=t.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},t.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==a}))))}function v(e){const n=h(e);return r.createElement("div",{className:(0,i.A)("tabs-container",y.tabList)},r.createElement(b,(0,a.A)({},e,n)),r.createElement(N,(0,a.A)({},e,n)))}function k(e){const n=(0,f.A)();return r.createElement(v,(0,a.A)({key:String(n)},e))}},4466:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>s,default:()=>g,frontMatter:()=>l,metadata:()=>p,toc:()=>d});var a=t(8168),r=(t(6540),t(5680)),i=t(1470),o=t(9365);const l={title:"Output"},s=void 0,p={unversionedId:"cli/output",id:"cli/output",title:"Output",description:"MSPC persists the results of each execution to a separate folder. Users can specify",source:"@site/docs/cli/output.md",sourceDirName:"cli",slug:"/cli/output",permalink:"/MSPC/docs/cli/output",draft:!1,editUrl:"https://github.com/Genometric/MSPC/tree/dev/website/docs/cli/output.md",tags:[],version:"current",frontMatter:{title:"Output"},sidebar:"someSidebar",previous:{title:"Input",permalink:"/MSPC/docs/cli/input"},next:{title:"Arguments",permalink:"/MSPC/docs/cli/args"}},u={},d=[{value:"BED files",id:"bed-files",level:2},{value:"MSPC Peaks",id:"mspc-peaks",level:2},{value:"Log File",id:"log-file",level:2},{value:"See Also",id:"see-also",level:2}],c={toc:d},m="wrapper";function g(e){let{components:n,...t}=e;return(0,r.yg)(m,(0,a.A)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("p",null,"MSPC persists the results of each execution to a separate folder. Users can specify\nthe output directory via the optional argument ",(0,r.yg)("a",{parentName:"p",href:"../cli/args#output-path"},(0,r.yg)("inlineCode",{parentName:"a"},"-o | --output")),";\nif not specified, MSPC creates an output directory with the following naming scheme. "),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"session_[DATE]_[TIME]\n\n// For example:\nsession_20191126_222131330\n")),(0,r.yg)("p",null,"Each output folder contains the following information: "),(0,r.yg)("p",null,"A log file that contains the execution log;\nConsensus peaks in standard BED and MSPC format;\nOne folder per each replicates contains BED files containing\n",(0,r.yg)("a",{parentName:"p",href:"../method/sets#stringent"},(0,r.yg)("inlineCode",{parentName:"a"},"stringent")),", ",(0,r.yg)("a",{parentName:"p",href:"../method/sets#weak"},(0,r.yg)("inlineCode",{parentName:"a"},"weak")),",\n",(0,r.yg)("a",{parentName:"p",href:"../method/sets#background"},(0,r.yg)("inlineCode",{parentName:"a"},"background")),", ",(0,r.yg)("a",{parentName:"p",href:"../method/sets#confirmed"},(0,r.yg)("inlineCode",{parentName:"a"},"confirmed")),",\n",(0,r.yg)("a",{parentName:"p",href:"../method/sets#discarded"},(0,r.yg)("inlineCode",{parentName:"a"},"discarded")),", ",(0,r.yg)("a",{parentName:"p",href:"../method/sets#truepositive"},(0,r.yg)("inlineCode",{parentName:"a"},"true-positive")),",\nand ",(0,r.yg)("a",{parentName:"p",href:"../method/sets#falsepositive"},(0,r.yg)("inlineCode",{parentName:"a"},"false-positive"))," peaks.\nYou may refer to the ",(0,r.yg)("a",{parentName:"p",href:"/MSPC/docs/method/sets"},"Sets")," page for a detailed\ndescription of each category."),(0,r.yg)("p",null,"An MSPC generated output for two replicates ",(0,r.yg)("inlineCode",{parentName:"p"},"rep1")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"rep2")," is as the following: "),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},".\n\u2514\u2500\u2500 session_20210309_131747501\n    \u251c\u2500\u2500 ConsensusPeaks.bed\n    \u251c\u2500\u2500 ConsensusPeaks_mspc_peaks.txt\n    \u251c\u2500\u2500 EventsLog_20210309_1317475050929.txt\n    \u251c\u2500\u2500 rep1\n    \u2502   \u251c\u2500\u2500 Background.bed\n    \u2502   \u251c\u2500\u2500 Background_mspc_peaks.txt\n    \u2502   \u251c\u2500\u2500 Confirmed.bed\n    \u2502   \u251c\u2500\u2500 Confirmed_mspc_peaks.txt\n    \u2502   \u251c\u2500\u2500 Discarded.bed\n    \u2502   \u251c\u2500\u2500 Discarded_mspc_peaks.txt\n    \u2502   \u251c\u2500\u2500 FalsePositive.bed\n    \u2502   \u251c\u2500\u2500 FalsePositive_mspc_peaks.txt\n    \u2502   \u251c\u2500\u2500 Stringent.bed\n    \u2502   \u251c\u2500\u2500 Stringent_mspc_peaks.txt\n    \u2502   \u251c\u2500\u2500 TruePositive.bed\n    \u2502   \u251c\u2500\u2500 TruePositive_mspc_peaks.txt\n    \u2502   \u2514\u2500\u2500 Weak.bed\n    \u2502   \u251c\u2500\u2500 Weak_mspc_peaks.txt\n    \u2514\u2500\u2500 rep2\n        \u251c\u2500\u2500 Background.bed\n        \u251c\u2500\u2500 Background_mspc_peaks.txt\n        \u251c\u2500\u2500 Confirmed.bed\n        \u251c\u2500\u2500 Confirmed_mspc_peaks.txt\n        \u251c\u2500\u2500 Discarded.bed\n        \u251c\u2500\u2500 Discarded_mspc_peaks.txt\n        \u251c\u2500\u2500 FalsePositive.bed\n        \u251c\u2500\u2500 FalsePositive_mspc_peaks.txt\n        \u251c\u2500\u2500 Stringent.bed\n        \u251c\u2500\u2500 Stringent_mspc_peaks.txt\n        \u251c\u2500\u2500 TruePositive.bed\n        \u251c\u2500\u2500 TruePositive_mspc_peaks.txt\n        \u2514\u2500\u2500 Weak.bed\n        \u2514\u2500\u2500 Weak_mspc_peaks.txt\n")),(0,r.yg)("h2",{id:"bed-files"},"BED files"),(0,r.yg)("p",null,"The ",(0,r.yg)("inlineCode",{parentName:"p"},"*.bed")," files contain peaks in the standard\n",(0,r.yg)("a",{parentName:"p",href:"https://genome.ucsc.edu/FAQ/FAQformat.html#format1"},"BED format"),".\nThese files contain peaks parsed from input files organized under\nthe ",(0,r.yg)("inlineCode",{parentName:"p"},"stringent"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"weak"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"background"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"confirmed"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"discarded"),",\n",(0,r.yg)("inlineCode",{parentName:"p"},"true-positive")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"false-positive")," groups. For example, peaks\nin a ",(0,r.yg)("inlineCode",{parentName:"p"},"Confirmed.bed")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"Discarded.bed")," files may read is the following: "),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"$ head .\\rep1\\Confirmed.bed\nchr     start   stop    name     -1xlog10(p-value)  strand\nchr1    32600   32680   peak_4   4.08               .\nchr1    32726   32936   peak_5   17.5               .\nchr1    34689   34797   peak_6   5.82               .\nchr1    35083   35124   peak_7   4.59               .\nchr1    38593   38836   peak_8   10.7               .\n\n$ head .\\rep1\\Discarded.bed\nchr     start   stop    name     -1xlog10(p-value)  strand\nchr1    137343  137383  peak_10  4.8                .\nchr1    228585  228625  peak_12  4.37               .\nchr1    265059  265115  peak_14  5.22               .\nchr1    557793  557833  peak_29  4.16               .\nchr1    725914  725963  peak_34  5.95               .\n")),(0,r.yg)("p",null,"Accordingly, the peak named ",(0,r.yg)("inlineCode",{parentName:"p"},"MACS_peak_4 ")," is ",(0,r.yg)("em",{parentName:"p"},"confirmed")," while\na peak with ",(0,r.yg)("inlineCode",{parentName:"p"},"MACS_peak_10 ")," name is ",(0,r.yg)("em",{parentName:"p"},"discarded"),". "),(0,r.yg)("h2",{id:"mspc-peaks"},"MSPC Peaks"),(0,r.yg)("p",null,"The ",(0,r.yg)("inlineCode",{parentName:"p"},"*_mspc_peaks.txt")," files group input peaks in different\ngroups similar to the ",(0,r.yg)("inlineCode",{parentName:"p"},"*.bed")," files. In addition, they\ncontain information about the analysis performed on each peak.\nThe additional information are: "),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Combined probability of\neach peak that is X-squared of\n",(0,r.yg)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Fisher%27s_method"},"Fisher\u2019s method"),"; ")),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Right-tailed probability of the X-squared\n(represented in ",(0,r.yg)("inlineCode",{parentName:"p"},"-Log10 (right-tailed probability)"),"; ")),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Benjamini\u2013Hochberg corrected p-value (represented in\n",(0,r.yg)("inlineCode",{parentName:"p"},"-Log10 (Adjusted p-value)"),". "))),(0,r.yg)("p",null,"For example, peaks corresponding to the above-mentioned\npeaks in the confirmed and discarded sets are as the following."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"$ head .\\rep1\\Confirmed_mspc_peaks.txt\nchr     start   stop    name      -1xlog10(p-value)  strand  xSqrd    -1xlog10(Right-Tail Probability)  -1xlog10(AdjustedP-value)\nchr1    32600   32680   peak_4    4.08               .       222.936  46.359                            4.07\nchr1    32726   32936   peak_5    17.5               .       284.738  59.674                            16.146\nchr1    34689   34797   peak_6    5.82               .       74.005   14.49                             5.634\nchr1    35083   35124   peak_7    4.59               .       52.867   10.042                            4.537\nchr1    38593   38836   peak_8    10.7               .       121.576  24.609                            9.892\n\n$ head .\\rep1\\Discarded_mspc_peaks.txt\nchr     start   stop    name      -1xlog10(p-value)  strand  xSqrd   -1xlog10(Right-Tail Probability)  -1xlog10(AdjustedP-value)\nchr1    137343  137383  peak_10   4.8                .       22.105  4.8                               NaN\nchr1    228585  228625  peak_12   4.37               .       20.125  4.37                              NaN\nchr1    265059  265115  peak_14   5.22               .       24.039  5.22                              NaN\nchr1    557793  557833  peak_29   4.16               .       19.158  4.16                              NaN\nchr1    725914  725963  peak_34   5.95               .       27.401  5.95                              NaN\n")),(0,r.yg)("p",null,"Note that the first five columns are identical between ",(0,r.yg)("inlineCode",{parentName:"p"},"*.bed"),"\nand ",(0,r.yg)("inlineCode",{parentName:"p"},"*_mspc_peaks.txt")," files, the columns 6, 7, and 8 are\nadded in the ",(0,r.yg)("inlineCode",{parentName:"p"},"*_mspc_peaks.txt")," files. "),(0,r.yg)("p",null,"In order to reproduce these results, you may run the following commands:"),(0,r.yg)(i.A,{groupId:"operating-systems",defaultValue:"win",values:[{label:"Windows",value:"win"},{label:"Linux",value:"linux"},{label:"macOS",value:"mac"}],mdxType:"Tabs"},(0,r.yg)(o.A,{value:"win",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-shell"},"wget -O demo.zip https://github.com/Genometric/Annotations/raw/master/SampleFiles/demo.zip; unzip demo.zip -d .\n.\\mspc.exe -i .\\rep*.bed -r bio -w 1e-4 -s 1e-8\n"))),(0,r.yg)(o.A,{value:"linux",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-shell"},"wget -O demo.zip https://github.com/Genometric/Annotations/raw/master/SampleFiles/demo.zip && unzip demo.zip -d .\n./mspc -i rep*.bed -r bio -w 1e-4 -s 1e-8\n"))),(0,r.yg)(o.A,{value:"mac",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-shell"},"wget -O demo.zip https://github.com/Genometric/Annotations/raw/master/SampleFiles/demo.zip && unzip demo.zip -d .\n./mspc -i rep*.bed -r bio -w 1e-4 -s 1e-8\n")))),(0,r.yg)("h2",{id:"log-file"},"Log File"),(0,r.yg)("p",null,"This file contains the information, debugging messages,\nand exceptions that occurred during the execution.\nThe files reads as the following: "),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"2021-03-09 15:47:22,524 [1] INFO    NOTE THAT THE LOG PATTERN IS: <Date> <#Thread> <Level> <Message>\n2021-03-09 15:47:22,570 [1] INFO    Export Directory: C:\\mspc\\session_20210309_154722332\n2021-03-09 15:47:22,572 [1] INFO    Degree of parallelism is set to 8.\n2021-03-09 15:47:22,595 [1] INFO    .::...Parsing Samples....::.\n2021-03-09 15:47:22,597 [1] INFO       #                Filename    Read peaks# Min p-value Mean p-value    Max p-value \n2021-03-09 15:47:22,597 [1] INFO    ----    --------------------    ----------- ----------- ------------    ----------- \n2021-03-09 15:47:22,906 [1] INFO    1/2 .\\rep1.bed  53,697  2.239E-074  1.085E-003  1.000E-002  \n2021-03-09 15:47:23,082 [1] INFO    2/2 .\\rep2.bed  37,717  5.370E-301  1.520E-004  9.550E-003  \n2021-03-09 15:47:23,084 [1] INFO    .::..Analyzing Samples...::.\n2021-03-09 15:47:23,093 [5] INFO    [1/4] Initializing\n2021-03-09 15:47:23,412 [5] INFO    [2/4] Processing samples\n...\n2021-03-09 15:47:23,749 [1] INFO    .::....Saving Results....::.\n2021-03-09 15:47:26,162 [1] INFO    .::..Summary Statistics..::.\n2021-03-09 15:47:26,163 [1] INFO       #                Filename    Read peaks# Background      Weak    Stringent   Confirmed   Discarded   TruePositive    FalsePositive   \n2021-03-09 15:47:26,164 [1] INFO    ----    --------------------    ----------- ----------  --------    ---------   ---------   ---------   ------------    -------------   \n2021-03-09 15:47:26,178 [1] INFO     1/2                    rep1         53,697     47.05%    42.95%       10.01%      26.84%      26.12%         26.84%            0.00%   \n2021-03-09 15:47:26,191 [1] INFO     2/2                    rep2         37,717     16.30%    50.35%       33.35%      43.48%      40.22%         43.48%            0.00%   \n2021-03-09 15:47:26,192 [1] INFO    .::.Consensus Peaks Count.::.\n2021-03-09 15:47:26,192 [1] INFO    17,290\n2021-03-09 15:47:26,193 [1] INFO    Elapsed time: 00:00:03.9396445\n2021-03-09 15:47:26,193 [1] INFO    All processes successfully finished.\n\n")),(0,r.yg)("p",null,"Note that the logs are reported in the following format: "),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"<Date> <#Thread> <Level> <Message>\n")),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("inlineCode",{parentName:"p"},"Message")," is the description of each log entry;")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"Possible values for ",(0,r.yg)("inlineCode",{parentName:"p"},"Level")," are ",(0,r.yg)("inlineCode",{parentName:"p"},"INFO"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"DEBUG")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"ERR"),";")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("inlineCode",{parentName:"p"},"Thread")," is the number of the process thread MSPC used for\nexecuting each process. MSPC runs operations in parallel\nusing ",(0,r.yg)("inlineCode",{parentName:"p"},"n")," threads, where ",(0,r.yg)("inlineCode",{parentName:"p"},"n")," is the degree of parallelism\nand reported at the beginning of the logs. It can be set\nvia the ",(0,r.yg)("a",{parentName:"p",href:"../cli/args#degree-of-parallelism"},(0,r.yg)("inlineCode",{parentName:"a"},"-d | -degree-of-parallelism argument")),".\nThis information is useful for debugging purposes only. "))),(0,r.yg)("h2",{id:"see-also"},"See Also"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"/MSPC/docs/method/about"},"Method description")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"/MSPC/docs/method/sets"},"Sets description"))))}g.isMDXComponent=!0}}]);