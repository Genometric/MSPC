"use strict";(self.webpackChunkmspc=self.webpackChunkmspc||[]).push([[248],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return d}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),s=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=s(e.components);return r.createElement(l.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=s(t),d=a,h=u["".concat(l,".").concat(d)]||u[d]||m[d]||i;return t?r.createElement(h,o(o({ref:n},c),{},{components:t})):r.createElement(h,o({ref:n},c))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=u;var p={};for(var l in n)hasOwnProperty.call(n,l)&&(p[l]=n[l]);p.originalType=e,p.mdxType="string"==typeof e?e:a,o[1]=p;for(var s=2;s<i;s++)o[s]=t[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},1208:function(e,n,t){t.r(n),t.d(n,{assets:function(){return c},contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return p},metadata:function(){return s},toc:function(){return m}});var r=t(7462),a=t(3366),i=(t(7294),t(3905)),o=["components"],p={title:"Performance"},l=void 0,s={unversionedId:"cli/benchmarking",id:"cli/benchmarking",title:"Performance",description:"We continuously improve MSPC\u2019s performance. We strive to speed up",source:"@site/docs/cli/benchmarking.md",sourceDirName:"cli",slug:"/cli/benchmarking",permalink:"/MSPC/docs/cli/benchmarking",draft:!1,editUrl:"https://github.com/Genometric/MSPC/tree/dev/website/docs/cli/benchmarking.md",tags:[],version:"current",frontMatter:{title:"Performance"},sidebar:"someSidebar",previous:{title:"Parser Configuration",permalink:"/MSPC/docs/cli/parser"},next:{title:"Install",permalink:"/MSPC/docs/library/install"}},c={},m=[{value:"Benchmark a Released Version",id:"benchmark-a-released-version",level:2}],u={toc:m};function d(e){var n=e.components,t=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"We continuously improve MSPC\u2019s performance. We strive to speed up\nthe runtime and decrease resource requirements with every release.\nWe stress-test every release of MSPC and benchmark it against earlier\nversions to identify and resolve performance regression."),(0,i.kt)("p",null,"We use the following resources for benchmarking MSPC: "),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Test data.")," We use ",(0,i.kt)("inlineCode",{parentName:"p"},"48")," randomly selected experiments from ENCODE,\nwhere each contains two ","[biological]"," replicates. We then call peaks\non these samples using ",(0,i.kt)("inlineCode",{parentName:"p"},"MACS2")," with permissive p-value threshold (cutoff at ",(0,i.kt)("inlineCode",{parentName:"p"},"0.0001"),").\nThe peaks we called on the samples of this cohort are available from the\nfollowing page: ",(0,i.kt)("a",{parentName:"p",href:"https://osf.io/jqrwu/"},"https://osf.io/jqrwu/"),".\nPlease visit ",(0,i.kt)("a",{parentName:"p",href:"/MSPC/docs/sample_data"},"sample data")," page for details and other cohorts.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Benchmarking scripts.")," We have developed a console application written\nin C# for benchmarking different releases of MSPC\n(see ",(0,i.kt)("a",{parentName:"p",href:"#benchmark-a-release-version"},"this section")," on how to use it).\nThe application is distributed along with MSPC as ",(0,i.kt)("inlineCode",{parentName:"p"},"benchmark.exe"),",\nand its source code is available from the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Genometric/MSPC/tree/dev/Benchmark"},"MSPC/Benchmark on github"),".\nThis code currently supports releases ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Genometric/MSPC/blob/909dc99eecbf60646fb44d59a1646b10efef4a77/Benchmark/VersionInfo.cs#L49"},(0,i.kt)("inlineCode",{parentName:"a"},"v5.x"),", ",(0,i.kt)("inlineCode",{parentName:"a"},"v4.x"),", ",(0,i.kt)("inlineCode",{parentName:"a"},"v2.x"),", and ",(0,i.kt)("inlineCode",{parentName:"a"},"v1.1")),"\nand other release will be added.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Jupyter Notebook for Downstream Analysis of Benchmarks."),"\nWe have developed a Jupyter Notebook for plotting and\nin-depth analysis of the runtime. The notebook can be\nexecuted on Colab, and is available from\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Genometric/MSPC/blob/dev/Benchmark/PlotBenchmarkings.ipynb"},"MSPC github page"),".\n")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Our Benchmarks.")," We publicly distribute the results\nof running ",(0,i.kt)("inlineCode",{parentName:"p"},"benchmark.exe")," on the aforementioned cohort\nat the following page. ",(0,i.kt)("a",{parentName:"p",href:"https://osf.io/jqrwu/"},"https://osf.io/jqrwu/")))),(0,i.kt)("h2",{id:"benchmark-a-released-version"},"Benchmark a Released Version"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"benchmark")," program takes the following arguments and\nruns every specified version of MSPC on the given cohort,\nand reports the runtime and resource usage in the output. "),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"--release"),": A list of ",(0,i.kt)("em",{parentName:"p"},"tag")," names of public MSPC releases\n(as labeled and avaialble on the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Genometric/MSPC/releases"},"Releases page"),");")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"--data-dir"),": A directory that contains the test cohort,\nwhich is expected to have a structure similar to the\nfollowing. "),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},"\u251c\u2500\u2500 ENCSR000BNU\n\u2502\xa0\xa0 \u251c\u2500\u2500 ENCFF308RGN-rep1.bed\n\u2502\xa0\xa0 \u2514\u2500\u2500 ENCFF438DHS-rep2.bed\n\u251c\u2500\u2500 ENCSR000EFR\n\u2502\xa0\xa0 \u251c\u2500\u2500 ENCFF276XFZ-rep2.bed\n\u2502\xa0\xa0 \u2514\u2500\u2500 ENCFF387NUG-rep1.bed\n...\n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"--max-rep-count"),": Set the maximum number of replicates to be used for benchmarking.\nThe program starts benchmarking MSPC at minimum two replicates, and iteratively increases\nthe number of replicates until ",(0,i.kt)("inlineCode",{parentName:"p"},"--max-rep-count"),". If the experiment does not have the\nset number of replicates, the ",(0,i.kt)("inlineCode",{parentName:"p"},"benchmark")," program will automatically generate synthetic\nreplicates by randomly alternating the given replicates. For instance, if ",(0,i.kt)("inlineCode",{parentName:"p"},"--max-rep-count 4"),",\n",(0,i.kt)("inlineCode",{parentName:"p"},"benchmark")," will run the following tests for the experiment ",(0,i.kt)("inlineCode",{parentName:"p"},"ENCSR000BNU")," (as shown in the above example):"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},"# Run 1:\n$ mspc.exe -i ENCFF308RGN-rep1.bed -i ENCFF438DHS-rep2.bed\n\n# Run 2:\n$ mspc.exe -i ENCFF308RGN-rep1.bed -i ENCFF438DHS-rep2.bed \\\n           -i ENCFF308RGN-rep1-randomly-modified.bed\n\n# Run 3:\n$ mspc.exe -i ENCFF308RGN-rep1.bed -i ENCFF438DHS-rep2.bed \\\n           -i ENCFF308RGN-rep1-randomly-modified.bed \\\n           -i ENCFF438DHS-rep2-randomly-modified.bed\n")),(0,i.kt)("p",{parentName:"li"},"  For brevity, other required arguments of MSPC are not shown."))))}d.isMDXComponent=!0}}]);