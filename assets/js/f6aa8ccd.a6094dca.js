"use strict";(self.webpackChunkmspc=self.webpackChunkmspc||[]).push([[666],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return d}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),l=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},u=function(e){var n=l(e.components);return r.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=l(t),d=o,h=m["".concat(c,".").concat(d)]||m[d]||p[d]||a;return t?r.createElement(h,s(s({ref:n},u),{},{components:t})):r.createElement(h,s({ref:n},u))}));function d(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,s=new Array(a);s[0]=m;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var l=2;l<a;l++)s[l]=t[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},5278:function(e,n,t){t.r(n),t.d(n,{assets:function(){return u},contentTitle:function(){return c},default:function(){return d},frontMatter:function(){return i},metadata:function(){return l},toc:function(){return p}});var r=t(7462),o=t(3366),a=(t(7294),t(3905)),s=["components"],i={title:"(A)synchronous execution"},c=void 0,l={unversionedId:"library/asynch_exe",id:"library/asynch_exe",title:"(A)synchronous execution",description:"The MSPC Core offers synchronous and asynchronous analysis",source:"@site/docs/library/asynch_exe.md",sourceDirName:"library",slug:"/library/asynch_exe",permalink:"/MSPC/docs/library/asynch_exe",draft:!1,editUrl:"https://github.com/Genometric/MSPC/tree/dev/website/docs/library/asynch_exe.md",tags:[],version:"current",frontMatter:{title:"(A)synchronous execution"},sidebar:"someSidebar",previous:{title:"Basic Invocation",permalink:"/MSPC/docs/library/basic_invocation"}},u={},p=[{value:"Synchronous Execution",id:"synchronous-execution",level:2},{value:"Asynchronous Execution",id:"asynchronous-execution",level:2}],m={toc:p};function d(e){var n=e.components,t=(0,o.Z)(e,s);return(0,a.kt)("wrapper",(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The MSPC ",(0,a.kt)("inlineCode",{parentName:"p"},"Core")," offers synchronous and asynchronous analysis\nof datasets. In other words: "),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"If executed synchronously, the caller is blocked until the\nanalysis has concluded;")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"If executed asynchronously, the caller is not blocked and can continue executing other logics, meanwhile, MSPC ",(0,a.kt)("inlineCode",{parentName:"p"},"Core")," reports\nthe execution status and signals when the analysis has concluded. "))),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Regardless of analysis invocation method, MSPC ",(0,a.kt)("em",{parentName:"p"},"Core"),"\nparallelizes the analysis of datasets (multi-threaded) whose\ndegree-of-parallelism can be adjusted.")),(0,a.kt)("p",null,"Both methods are discussed in details in the following sections. "),(0,a.kt)("h2",{id:"synchronous-execution"},"Synchronous Execution"),(0,a.kt)("p",null,"A synchronous execution is the common function invocation, where\nthe command after function call is not executed until the called\nfunction returns. For instance: "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"var y = Func(x); // Blocked here until Func(x) returns\nvar z = y * 2;   // Not executed until Func(x) returns\n")),(0,a.kt)("p",null,"The MSPC ",(0,a.kt)("inlineCode",{parentName:"p"},"Core")," can analyze datasets ",(0,a.kt)("em",{parentName:"p"},"synchronously"),", which\ncan be invoked as the following:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"using Genometric.MSPC.Core;\n\n// Setup:\nvar mspc = new Mspc();\nforeach (var sample in samples) // where `samples` is a list of parsed input datasets.\n    mspc.AddSample(sample.FileHashKey, sample);\n\n// Method 1:\nvar results = mspc.Run(options);\n\n// Method 2:\nmspc.Run(options);\nvar results = mspc.GetResults();\n")),(0,a.kt)("p",null,"A synchronous execution is easier to implement and invoke;\nhowever, it renders the program irresponsive during the function\nexecution, which can be disadvantageous for long-running\nanalysis. Therefore, MSPC ",(0,a.kt)("inlineCode",{parentName:"p"},"Core")," also implements ",(0,a.kt)("em",{parentName:"p"},"asynchronous"),"\nexecution of the analysis method."),(0,a.kt)("h2",{id:"asynchronous-execution"},"Asynchronous Execution"),(0,a.kt)("p",null,"Long-running functions are commonly executed asynchronously,\nwhich keeps the (graphical or command line) interface responsive,\nand allows executing other logics (e.g., show elapsed time)\nwhile the long-running function is being executed. For instance: "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"int y = AsynchFunc(x); // function invoked and execution is \n                       // continued to the next line regardless \n                       // of the function has returned or not.\nvar z = y * 2;         // executed even if `AsynchFunc` is busy, \n                       // and uses default value of `y`, which is `0`. \n")),(0,a.kt)("p",null,"The MSPC ",(0,a.kt)("inlineCode",{parentName:"p"},"Core")," can analyze datasets ",(0,a.kt)("em",{parentName:"p"},"asynchronously"),", which can\nbe used as the following in its basic form:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"using Genometric.MSPC.Core;\n\n// Setup:\nvar mspc = new Mspc();\nforeach (var sample in samples) // where `samples` is a list of parsed input datasets.\n    mspc.AddSample(sample.FileHashKey, sample);\n\n\n// Invoke MSPC `Core` asynchronously\nmspc.RunAsync(options);\n// ...\n// Here implement any logic to be executed while MSPC Core is running\n// ...\n\n// Wait for MSPC's signal on analysis completion\nmspc.Done.WaitOne();\n\n// Get results\nvar results = mspc.GetResults();\n")),(0,a.kt)("p",null,"While MSPC ",(0,a.kt)("inlineCode",{parentName:"p"},"Core")," is running asynchronously, it reports\nits progress, which you can display it as the following:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},'void Run()\n{\n    var mspc = new Mspc();\n    mspc.StatusChanged += _mspc_statusChanged;\n\n    mspc.RunAsync(_options);\n    mspc.Done.WaitOne();\n}\n\nprivate void _mspc_statusChanged(object sender, ValueEventArgs e)\n{\n    Console.WriteLine(e.Value.Step + "\\t" + e.Value.StepCount + "\\t" + e.Value.Message);\n}\n')),(0,a.kt)("p",null,"See ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/Genometric/MSPC/blob/edce42ecb18e7c447396f038e03f2fd7d911d70e/CLI/Orchestrator.cs#L19-L73"},"MSPC CLI Orchestrator"),"\nfor a complete example of running MSPC ",(0,a.kt)("inlineCode",{parentName:"p"},"Core"),"\n",(0,a.kt)("em",{parentName:"p"},"asynchronously")," and reporting its status."))}d.isMDXComponent=!0}}]);